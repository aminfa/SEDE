/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.9).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package de.upb.sede.edd.api;

import de.upb.sede.edd.model.Remote;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-07-03T11:35:15.474Z[GMT]")
@Api(value = "remote", description = "the remote API")
public interface RemoteApi {

    @ApiOperation(value = "Returns all remotes.", nickname = "remoteGet", notes = "", response = Remote.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Connected remotes.", response = Remote.class, responseContainer = "List") })
    @RequestMapping(value = "/remote",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Remote>> remoteGet();


    @ApiOperation(value = "Connects to the specified remote.", nickname = "remotePost", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Group was created."),
        @ApiResponse(code = 405, message = "Parent group doesn't exist.") })
    @RequestMapping(value = "/remote",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> remotePost(@ApiParam(value = "", required = true) @Valid @RequestBody Remote body);


    @ApiOperation(value = "Disconnects the remote machine.", nickname = "remoteRemoteNameDelete", notes = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The disconnected group. Connect by posting this object to `/groups`."),
        @ApiResponse(code = 404, message = "The given remote name was not found") })
    @RequestMapping(value = "/remote/{remoteName}",
        method = RequestMethod.DELETE)
    ResponseEntity<String> remoteRemoteNameDelete(@ApiParam(value = "Remote name of a previosuly managed machine with an EDD server.", required = true) @PathVariable("remoteName") String remoteName);

}
