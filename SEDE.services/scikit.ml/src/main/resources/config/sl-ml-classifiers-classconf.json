{
    "de.upb.sede.services.mls.DataSetService": {
        "methods": {
            "$construct": {
                "params": [
                    "String"
                ]
            },
            "createUnique": {
                "params": [
                    "weka.core.Instances"
                ],
                "static": true,
                "returntype": "de.upb.sede.services.mls.DataSetService"
            },
            "createNamed": {
                "params": [
                    "weka.core.Instances",
                    "String"
                ],
                "static": true,
                "returntype": "de.upb.sede.services.mls.DataSetService"
            },
            "all": {
                "statemutating": false,
                "returntype": "weka.core.Instances"
            },
            "allLabeled": {
                "params": [
                    "Number"
                ],
                "statemutating": false,
                "returntype": "weka.core.Instances"
            },
            "fromIndices": {
                "params": [
                    "builtin.List"
                ],
                "statemutating": false,
                "returntype": "weka.core.Instances"
            },
            "fromIndicesLabeled": {
                "params": [
                    "builtin.List",
                    "Number"
                ],
                "statemutating": false,
                "returntype": "weka.core.Instances"
            }
        }
    },
    "$base_classifier_config$": {
        "abstract": true,
        "methods": {
            "train": {},
            "predict": {},
            "set_options": {}
        }
    },
    "wrappers.sk.WrappedClassifier":{
        "extends": [
            "$base_classifier_config$"
        ],
        "methods": {
            "$construct": {
                "params": [
                    "String"
                ]
            },
            "train": {
                "params": [
                    "weka.core.Instances"
                ]
            },
            "predict": {
                "params": [
                    "Bool",
                    "weka.core.Instances"
                ],
                "returntype": "builtin.List",
                "statemutating": false
            },
            "set_options": {
                "params": [
                    "builtin.List"
                ]
            }
        }
    },
  

    "$Basic_sk_classifier$":{
        "wrapper" : "wrappers.sk.WrappedClassifier"
    },
    
    "$Ensemble_sk_classifier$":{
        "wrapper" : "wrappers.sk.WrappedClassifier"
    },
    "$Meta_sk_classifier$":{
        "wrapper" : "wrappers.sk.WrappedClassifier"
    },
  
    "$Clustering_sk_classifier$":{
        "wrapper" : "wrappers.sk.WrappedClassifier"
    },


    "sklearn.ensemble.AdaBoostClassifier" : {
        "extends" : ["$Meta_sk_classifier$"]
    },
    "sklearn.ensemble.BaggingClassifier" : {
        "extends" : ["$Meta_sk_classifier$"]
    },

    "sklearn.mixture.BayesianGaussianMixture" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.naive_bayes.BernoulliNB" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.tree.ExtraTreeClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.ensemble.ExtraTreesClassifier" : {
        "extends" : ["$Ensemble_sk_classifier$"]
    },
    "sklearn.naive_bayes.GaussianNB" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.gaussian_process.GaussianProcessClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.ensemble.GradientBoostingClassifier" : {
        "extends" : ["$Ensemble_sk_classifier$"]
    },
    "sklearn.neighbors.KNeighborsClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.neighbors.LSHForest" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.svm.LinearSVC" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.linear_model.LogisticRegression" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.linear_model.LogisticRegressionCV" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.naive_bayes.MultinomialNB" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.neighbors.NearestNeighbors" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.svm.NuSVC" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.linear_model.PassiveAggressiveClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.neighbors.RadiusNeighborsClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.ensemble.RandomForestClassifier" : {
        "extends" : ["$Ensemble_sk_classifier$"]
    },
    "sklearn.linear_model.RidgeClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.linear_model.RidgeClassifierCV" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.linear_model.SGDClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.svm.SVC" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.neural_network.MLPClassifier" : {
        "extends" : ["$Basic_sk_classifier$"]
    },
    "sklearn.tree.DecisionTreeClassifier":{
        "extends" : ["$Basic_sk_classifier$"]
    },

    "wrappers.tf.WrappedNeuralNet" : {
        "extends" : ["$Basic_sk_classifier$"],
        "abstract" : true
    }, 
    "tflib.NeuralNet" : {
        "classname": "tflib.neuralnet.NeuralNet",
        "wrapper" : "wrappers.tf.WrappedNeuralNet"
    }

}